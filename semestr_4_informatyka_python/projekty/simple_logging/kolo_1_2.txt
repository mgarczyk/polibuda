1. register lub login:
- user jest pytany: "co chcesz zrbic? login, rejestracja, exit?"
- komenda register tworzy usera w bazie userów - plik txt - sprawdza też unikalność loginów.
- komenda login - sprawdzamy czy user o podanym loginie i haśle istnieje w bazie txt. jesli hasło i login się zgadzają user uzyskuje dostęp do komend opisanych nizej pkt. 2.
UWAGA: hasła nie mogą być storowane w plaintextcie. Proszę zastosować dowolną funkcje haszującą lub ewentualnie przesunięcie o N tzn. dla N=1 hasło "alamakota" byłoby storowane jako "bmbnblpub"
- exit zamyka program
-nieudane proby rejestracji i loginu ponawiaja pytanie
- sukces rejestracji - uzytkownik jest informowany o sukcesie ale nadal musi sie zalogować
- sukces logowania - pkt. 2.
2.
-każdy user ma swoj folder tworzony przy rejestracji
-po zalogowaniu user jest pytany o to co chce zrobić "co chcesz zrobić? store text, store image, show files, inspect {file}, exit?"
-zalogowany user moze tworzyc notatki txt i wrzucac obrazki do swojego folderu (podajac sciezke):
	- komenda store text - prosi o podanie nazwy pliku txt do utworzenia a nastepnie o podanie jego zawartości. Następnie plik jest zapisywany w folderze usera
	- komenda store image - prosi o podanie ścieżki do obrazka znajdującego się na PC. Obrazek następnie ejst zapisywany w folderze usera 

-zalogowany user moze uzyc komendy "show files" aby wyświetlic wszystkie nazwy plików w folderze, zadbaj o to aby było wiadomo czy plik jest obrazkiem czy txt

-zalogowany user może użyć komendy "inspect {filename}" aby odczytać plik. jesli jest to txt drukujemy jego zawartość w terminalu, jeśli obrazek wyświetlamy go:
zawartosc pliku ... to : ..........

- po wykonaniu dowolnej komendy poza exit user jest ponownie pytany o to co chce zrobic.
 Jeżeli wykonanie komendy się udało dzieje się to co opisane wyżej, jeżeli nie to user jest informowany o błędzie/braku pliku etc. Exit zamyka program.