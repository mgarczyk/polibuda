     1  0000: 02 01 00  	LJMP	START
     2  0100:           	ORG	100H
     3  0100:           START:
     4                  	;zapisywanie
     5  0100: C2 D4     	CLR RS1 ;bank 0
     6  0102: C2 D3     	CLR RS0
     7  0104: 7F 00     	MOV R7, #0
     8  0106: C2 D4     	CLR RS1
     9  0108: D2 D3     	SETB RS0
    10  010A: 7F 01     	MOV R7, #1 ;bank 1
    11  010C: D2 D4     	SETB RS1
    12  010E: C2 D3     	CLR RS0
    13  0110: 7F 02     	MOV R7, #2 ;bank 2
    14  0112: D2 D4     	SETB RS1
    15  0114: D2 D3     	SETB RS0
    16  0116: 7F 03     	MOV R7, #3 ;bank 3
    17                  	;wyświetlanie bank 0
    18  0118: C2 D4     	CLR RS1 ;bank 0
    19  011A: C2 D3     	CLR RS0
    20  011C: 12 81 0C  	LCALL LCD_CLR ;wyczyść ekran
    21  011F: EF        	MOV A, R7
    22  0120: 12 81 04  	LCALL WRITE_HEX ;wypisz zawartość akumulatora na ekran
    23                  	;wyświetlanie bank 1
    24  0123: C2 D4     	CLR RS1
    25  0125: D2 D3     	SETB RS0 ;bank 1
    26  0127: EF        	MOV A, R7
    27  0128: 12 81 04  	LCALL WRITE_HEX 
    28                  	;wyświetlanie bank 2
    29  012B: D2 D4     	SETB RS1 ;bank 2
    30  012D: C2 D3     	CLR RS0
    31  012F: EF        	MOV A, R7
    32  0130: 12 81 04  	LCALL WRITE_HEX 
    33                  	;wyświetlanie bank 3
    34  0133: D2 D4     	SETB RS1
    35  0135: D2 D3     	SETB RS0 ;bank 3
    36  0137: EF        	MOV A, R7
    37  0138: 12 81 04  	LCALL WRITE_HEX 
    38                  	
    39                  	
    40                  	
    41                  	
    42                  
    43                  
    44                  	
    45                  
    46                  
    47                  
    48                  
    49  013B: 02 01 3B  	LJMP	$ ;- pozosta� w p�tli
